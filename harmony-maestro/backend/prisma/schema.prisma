generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  activityLogs ActivityLog[]
}

model Member {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  active    Boolean  @default(true)
  createdAt DateTime @default(now())
}

model Event {
  id          Int      @id @default(autoincrement())
  title       String
  date        DateTime
  location    String?
  description String?
  color       String?   @default("#3b82f6")
  status      String    @default("pendente") // escalado, pendente, cancelado
  seriesId    Int?
  series      Series?   @relation(fields: [seriesId], references: [id])
  createdAt   DateTime  @default(now())
}

model Song {
  id        Int      @id @default(autoincrement())
  title     String
  artist    String?
  fileUrl   String?
  createdAt DateTime @default(now())
}

model Series {
  id        Int      @id @default(autoincrement())
  title     String
  startDate DateTime
  endDate   DateTime
  events    Event[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Notification {
  id        Int      @id @default(autoincrement())
  title     String
  message   String
  date      DateTime @default(now())
  createdAt DateTime @default(now())
}

model ActivityLog {
  id        Int      @id @default(autoincrement())
  type      String   // "song_added", "member_joined", "event_created", etc
  message   String
  createdAt DateTime @default(now())
  userId    Int?
  user      User?    @relation(fields: [userId], references: [id])
}
